name: Deploy Docker Container

on:
  push:
    branches:
      - ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Create .env file
      run: |
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }} .
        docker images  # بررسی تصویرهای ساخته‌شده


    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Create destination directory on Server
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "mkdir -p ${{ secrets.SERVER_ENV_PATH }}"  # ایجاد دایرکتوری در سرور

    - name: Copy .env file to server
      run: |
        scp .env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_ENV_PATH }}/.env # کپی کردن فایل .env به سرور

    - name: Stop and Remove Old Container
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker stop ${{ secrets.CONTAINER_NAME }} || true && docker rm ${{ secrets.CONTAINER_NAME }} || true"
      
    - name: Pull Docker Image
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
          docker images -q ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }} | xargs -r docker rmi && 
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}"
      
    - name: Run Docker Container
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
          docker run -d --env-file ${{ secrets.SERVER_ENV_PATH }}/.env --name ${{ secrets.CONTAINER_NAME }} --restart unless-stopped ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}"
      

    - name: Check if Container is Running
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "if [ \$(docker ps -q -f name=${{ secrets.CONTAINER_NAME }}) ]; then echo 'Container is running'; else echo 'Container is not running'; exit 1; fi"
